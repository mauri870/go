// Code generated by cmd/cgo -godefs; DO NOT EDIT.
// cgo -godefs defs_cosmo.go

package runtime

const (
	EINTR	= 0x4
	EFAULT	= 0xe
	_EAGAIN	= 0x23
	_ENOMEM	= 0xc

	_O_WRONLY	= 0x1
	O_NONBLOCK	= 0x4
	_O_CREAT	= 0x200
	_O_TRUNC	= 0x400
	O_CLOEXEC	= 0x80000

	_PROT_NONE	= 0x0
	_PROT_READ	= 0x1
	_PROT_WRITE	= 0x2
	_PROT_EXEC	= 0x4

	_MAP_ANON	= 0x20
	_MAP_PRIVATE	= 0x2
	_MAP_FIXED	= 0x10

	_MADV_DONTNEED		= 0x4
	_MADV_FREE		= 0x8
	_MADV_HUGEPAGE		= 0xe
	_MADV_NOHUGEPAGE	= 0xf
	_MADV_COLLAPSE		= 0x19

	_SA_SIGINFO	= 0x4
	_SA_RESTART	= 0x10000000
	_SA_ONSTACK	= 0x8000000

	_SI_USER	= 0

	_SIGHUP		= 0x1
	_SIGINT		= 0x2
	_SIGQUIT	= 0x3
	_SIGILL		= 0x4
	_SIGTRAP	= 0x5
	_SIGABRT	= 0x6

	_SIGFPE		= 0x8
	_SIGKILL	= 0x9

	_SIGSEGV	= 0xb

	_SIGPIPE	= 0xd
	_SIGALRM	= 0xe
	_SIGTERM	= 0xf
	_SIGURG		= 0x17

	_SIGTTIN	= 0x15
	_SIGTTOU	= 0x16

	_SIGXCPU	= 0x18
	_SIGXFSZ	= 0x19
	_SIGVTALRM	= 0x1a
	_SIGPROF	= 0x1b
	_SIGWINCH	= 0x1c

	BUS_ADRALN	= 0x1
	BUS_ADRERR	= 0x2
	BUS_OBJERR	= 0x3

	SEGV_MAPERR	= 0x1
	SEGV_ACCERR	= 0x2

	_ITIMER_REAL	= 0x0
	_ITIMER_VIRTUAL	= 0x1
	_ITIMER_PROF	= 0x2

	_NSIG	= 0x80

	_FUTEX_WAIT		= 0
	_FUTEX_WAKE		= 1
	_FUTEX_PRIVATE_FLAG	= 128
	_FUTEX_WAIT_PRIVATE	= (_FUTEX_WAIT | _FUTEX_PRIVATE_FLAG)
	_FUTEX_WAKE_PRIVATE	= (_FUTEX_WAKE | _FUTEX_PRIVATE_FLAG)
)

type sigset struct {
	X__bits [2]uint64
}

// TODO(mauri870): confirm all these structures, they were copied as-is from aix
var sigset_all = sigset{[2]uint64{^uint64(0), ^uint64(0)}}

type siginfo struct {
	si_signo   int32
	si_errno   int32
	si_code    int32
	__pad      [3]int32
	__ignoreme [112]byte
}

type timespec struct {
	tv_sec  int64
	tv_nsec int64
}

//go:nosplit
func (ts *timespec) setNsec(ns int64) {
	ts.tv_sec = ns / 1e9
	ts.tv_nsec = ns % 1e9
}

type timeval struct {
	tv_sec    int64
	tv_usec   int32
	pad_cgo_0 [4]byte
}

func (tv *timeval) set_usec(x int32) {
	tv.tv_usec = x
}

type itimerval struct {
	it_interval timeval
	it_value    timeval
}

type stackt struct {
	ss_sp     uintptr
	ss_size   uintptr
	ss_flags  int32
	__pad     [4]int32
	pas_cgo_0 [4]byte
}

type sigactiont struct {
	sa_handler uintptr // a union of two pointer
	sa_mask    sigset
	sa_flags   int32
	pad_cgo_0  [4]byte
}

type fpxreg struct {
	significand [4]uint16
	exponent    uint16
	padding     [3]uint16
}

type xmmreg struct {
	// TODO(mauri870): on cosmos this is uint64_t u64[2];
	element [4]uint32
}

type fpstate struct {
	cwd       uint16
	swd       uint16
	ftw       uint16
	fop       uint16
	rip       uint64
	rdp       uint64
	mxcsr     uint32
	mxcr_mask uint32
	_st       [8]fpxreg
	_xmm      [16]xmmreg
	padding   [24]uint32
}

type mcontext struct {
	gregs       [23]uint64
	fpregs      *fpstate
	__reserved1 [8]uint64
}

type ucontext struct {
	uc_sigmask  sigset
	uc_mcontext mcontext
	uc_link     *ucontext
	uc_stack    stackt
	uc_flags    int32
	__spare__   [4]int32
	pad_cgo_0   [12]byte
}

type sigcontext struct {
	r8          uint64
	r9          uint64
	r10         uint64
	r11         uint64
	r12         uint64
	r13         uint64
	r14         uint64
	r15         uint64
	rdi         uint64
	rsi         uint64
	rbp         uint64
	rbx         uint64
	rdx         uint64
	rax         uint64
	rcx         uint64
	rsp         uint64
	rip         uint64
	eflags      uint64
	cs          uint16
	gs          uint16
	fs          uint16
	__pad0      uint16
	err         uint64
	trapno      uint64
	oldmask     uint64
	cr2         uint64
	fpstate     *fpstate
	__reserved1 [8]uint64
}
